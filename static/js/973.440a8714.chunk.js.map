{"version":3,"file":"static/js/973.440a8714.chunk.js","mappings":"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","sources":["Mocks/helper.ts","Mocks/Models/Bill.ts","Mocks/Models/GroupBill.ts","Mocks/Handlers/GroupBill.ts","Mocks/Handlers/Bill.ts","Mocks/Models/Transaction.ts","Mocks/Handlers/Transaction.ts","Mocks/Handlers/Transactions.ts","Mocks/index.tsx"],"sourcesContent":["export function generateUUID(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}","import { IBill } from \"../../type\";\r\nimport { generateUUID } from \"../helper\";\r\nimport { getGroupBill } from \"./GroupBill\";\r\n\r\nexport let bills = [\r\n    {\r\n        id: \"00924f0b-c772-491f-831a-80329a07d0fa\",\r\n        groupBillId: \"411ce821-5ba7-4829-a3c9-d31f2763d26e\",\r\n        name: \"МелБанк\",\r\n        balance: 10050\r\n    },\r\n    {\r\n        id: \"1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5\",\r\n        groupBillId: \"411ce821-5ba7-4829-a3c9-d31f2763d26e\",\r\n        name: \"СберБанк\",\r\n        balance: -25000\r\n    },\r\n    {\r\n        id: \"x9y8z7w6-v5u4-t3s2-r1q-p0o9n8m7l6\",\r\n        groupBillId: \"30d65281-6e8d-405a-8c3e-7e6dfa1cd6a1\",\r\n        name: \"ВТБ\",\r\n        balance: 15600\r\n    },\r\n    {\r\n        id: \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5\",\r\n        groupBillId: \"30d65281-6e8d-405a-8c3e-7e6dfa1cd6a1\",\r\n        name: \"Тинькофф\",\r\n        balance: 8700\r\n    },\r\n    {\r\n        id: \"25679368-ddeb-4763-aad0-75c4c2f1d53f\",\r\n        groupBillId: \"b77d652c-f5ae-4385-8099-0aa4e1f79836\",\r\n        name: \"Альфа-Банк\",\r\n        balance: 18900\r\n    }\r\n]\r\n\r\nexport function getBill(billId: string) {\r\n    return bills.find((bill) => bill.id === billId);\r\n}\r\n\r\nexport function getBills(groupBillId: string): IBill[] {\r\n    return bills.filter((bill) => bill.groupBillId === groupBillId);\r\n}\r\n\r\nexport function createBill(bill: IBill) {\r\n    const groupBill = getGroupBill(bill.groupBillId);\r\n    const newBill = {\r\n        id: generateUUID(),\r\n        groupBillId: bill.groupBillId,\r\n        name: bill.name,\r\n        balance: bill.balance\r\n    }\r\n\r\n    if (groupBill) {\r\n        groupBill.bills.push(newBill);\r\n    }\r\n}\r\n\r\nexport function updateBill(billId: string, bill: IBill) {\r\n    const indexOldBill = bills.findIndex((bill) => bill.id === billId);\r\n    const newBill = {\r\n        id: billId,\r\n        groupBillId: bill.groupBillId,\r\n        name: bill.name,\r\n        balance: bill.balance\r\n    }\r\n\r\n    bills[indexOldBill] = newBill;\r\n}\r\n\r\nexport function deleteBill(billId: string) {\r\n    bills = bills.filter((bill) => bill.id !== billId);;\r\n}","import { IGroupBill } from \"../../type\";\r\nimport { generateUUID } from \"../helper\";\r\nimport { getBills } from \"./Bill\";\r\n\r\nexport let groupBills: IGroupBill[] = [\r\n    {\r\n        id: \"411ce821-5ba7-4829-a3c9-d31f2763d26e\",\r\n        userId: \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5\",\r\n        name: \"Мои счета\",\r\n        bills: [],\r\n    },\r\n    {\r\n        id: \"30d65281-6e8d-405a-8c3e-7e6dfa1cd6a1\",\r\n        userId: \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5\",\r\n        name: \"Накопления\",\r\n        bills: [],\r\n    },\r\n    {\r\n        id: \"b77d652c-f5ae-4385-8099-0aa4e1f79836\",\r\n        userId: \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5\",\r\n        name: \"На будущее\",\r\n        bills: [],\r\n    }\r\n]\r\n\r\nexport function getGroupBill(groupBillId: string) {\r\n    return groupBills.find((groupBill) => groupBill.id === groupBillId);\r\n}\r\n\r\nexport function getGroupBills() {\r\n    groupBills.forEach(groupBill => {\r\n        groupBill.bills = getBills(groupBill.id);\r\n    });\r\n    return groupBills;\r\n}\r\n\r\nexport function createGroupBill(groupBill: IGroupBill) {\r\n    const newGroupBill = {\r\n        id: generateUUID(),\r\n        userId: groupBill.userId,\r\n        name: groupBill.name,\r\n        bills: groupBill.bills\r\n    }\r\n    groupBills.push(newGroupBill);\r\n}\r\n\r\nexport function updateGroupBill(groupBillId: string, groupBill: IGroupBill) {\r\n    const indexOldGroup = groupBills.findIndex((groupBill) => groupBill.id === groupBillId);\r\n    const newGroupBill = {\r\n        id: groupBillId,\r\n        userId: groupBill.userId,\r\n        name: groupBill.name,\r\n        bills: groupBill.bills\r\n    }\r\n\r\n    groupBills[indexOldGroup] = newGroupBill;\r\n}\r\n\r\nexport function deleteGroupBill(groupBillId: string) {\r\n    groupBills = groupBills.filter((groupBill) => groupBill.id !== groupBillId);;\r\n}","import { DefaultBodyType, http, HttpResponse, StrictRequest } from \"msw\";\r\nimport { OUR_API_ADDRESS, OUR_API_ENDPOINTS } from \"../../API/Manager\";\r\nimport {\r\n    getGroupBill,\r\n    createGroupBill,\r\n    updateGroupBill,\r\n    deleteGroupBill,\r\n    getGroupBills,\r\n} from \"../Models/GroupBill\";\r\nimport { IGroupBill } from \"../../type\";\r\n\r\ninterface IGroupBillHandler {\r\n    params: {\r\n        groupBillId: string;\r\n    };\r\n    request?: StrictRequest<DefaultBodyType> | undefined;\r\n};\r\n\r\n\r\nconst groupBillUrl = OUR_API_ADDRESS + \"/\" + OUR_API_ENDPOINTS.GROUPBILLS;\r\nconst groupBillIdUrl = groupBillUrl + \"/:\" + OUR_API_ENDPOINTS.GROUPBILLID;\r\n\r\nexport const groupBillHandlers = [\r\n\r\n    http.get(groupBillUrl, () => {\r\n        const groupBills = getGroupBills();\r\n        return HttpResponse.json(groupBills);\r\n    }),\r\n\r\n    http.get(groupBillIdUrl, async ({ params }: IGroupBillHandler) => {\r\n        const { groupBillId } = params;\r\n        const groupBill = getGroupBill(groupBillId);\r\n        return HttpResponse.json(groupBill);\r\n    }),\r\n\r\n    http.post(groupBillUrl, async ({ request }) => {\r\n        const data = (await request.json()) as IGroupBill;\r\n        createGroupBill(data);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n\r\n    http.put(groupBillIdUrl, async ({ params, request }: IGroupBillHandler) => {\r\n        if (request) {\r\n            const { groupBillId } = params;\r\n            const groupBill = (await request.json()) as IGroupBill;\r\n            updateGroupBill(groupBillId, groupBill);\r\n            return HttpResponse.json({ success: true }, { status: 200 });\r\n        }\r\n        return HttpResponse.error();\r\n    }),\r\n\r\n    http.delete(groupBillIdUrl, async ({ params }: IGroupBillHandler) => {\r\n        const { groupBillId } = params;\r\n        deleteGroupBill(groupBillId);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n];\r\n","import { DefaultBodyType, http, HttpResponse, StrictRequest } from \"msw\";\r\nimport { OUR_API_ADDRESS, OUR_API_ENDPOINTS } from \"../../API/Manager\";\r\nimport {\r\n    updateBill,\r\n    getBill,\r\n    createBill,\r\n    deleteBill,\r\n    bills,\r\n} from \"../Models/Bill\";\r\nimport { IBill } from \"../../type\";\r\n\r\ninterface IBillHandler {\r\n    params: {\r\n        billId: string;\r\n    };\r\n    request?: StrictRequest<DefaultBodyType> | undefined;\r\n};\r\n\r\nconst billUrl = OUR_API_ADDRESS + \"/\" + OUR_API_ENDPOINTS.BILLS;\r\nconst billIdUrl = billUrl + \"/:\" + OUR_API_ENDPOINTS.BILLID;\r\n\r\nexport const billHandlers = [\r\n\r\n    http.get(billUrl, () => {\r\n        return HttpResponse.json(bills);\r\n    }),\r\n\r\n    http.get(billIdUrl, async ({ params }: IBillHandler) => {\r\n        const { billId } = params;\r\n        const bill = getBill(billId);\r\n        return HttpResponse.json(bill);\r\n    }),\r\n\r\n    http.post(billUrl, async ({ request }) => {\r\n        const data = (await request.json()) as IBill;\r\n        createBill(data);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n\r\n    http.put(billIdUrl, async ({ params, request }: IBillHandler) => {\r\n        if (request) {\r\n            const { billId } = params;\r\n            const bill = (await request.json()) as IBill;\r\n            updateBill(billId, bill);\r\n            return HttpResponse.json({ success: true }, { status: 200 });\r\n        }\r\n        return HttpResponse.error();\r\n    }),\r\n\r\n    http.delete(billIdUrl, async ({ params }: IBillHandler) => {\r\n        const { billId } = params;\r\n        deleteBill(billId);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n];\r\n","import { ITransaction } from \"../../type\";\r\nimport { generateUUID } from \"../helper\";\r\n\r\nexport let transactions = [\r\n    {\r\n        id: \"g7h8i9j0-k1l2-3m4n-5o6p-7q8r9s0t1u2v3\",\r\n        category: \"Транспорт\",\r\n        amount: 35,\r\n        date: \"2020-06-20T15:30:00+01:00\",\r\n        comment: \"Проезд на автобусе\",\r\n        type: \"Expense\",\r\n        billId: \"00924f0b-c772-491f-831a-80329a07d0fa\"\r\n    },\r\n    {\r\n        id: \"q1r2s3t4-u5v6-7w8x-9y0z-a1b2c3d4e5f6\",\r\n        category: \"Здоровье\",\r\n        amount: 75,\r\n        date: \"2020-06-15T10:00:00+01:00\",\r\n        comment: \"Посещение стоматолога\",\r\n        type: \"Expense\",\r\n        billId: \"00924f0b-c772-491f-831a-80329a07d0fa\"\r\n    },\r\n    {\r\n        id: \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p\",\r\n        category: \"Покупки\",\r\n        amount: 120,\r\n        date: \"2020-06-10T17:45:00+01:00\",\r\n        comment: \"Продукты в супермаркете\",\r\n        type: \"Expense\",\r\n        billId: \"00924f0b-c772-491f-831a-80329a07d0fa\"\r\n    },\r\n    {\r\n        id: \"f2a35c7d-b3f6-4d6f-b2d9-c7d3a6e0a8f1\",\r\n        category: \"Обед\",\r\n        amount: 450,\r\n        date: \"2020-06-10T13:30:00+01:00\",\r\n        comment: \"Обед в ресторане\",\r\n        type: \"Expense\",\r\n        billId: \"00924f0b-c772-491f-831a-80329a07d0fa\"\r\n    },\r\n    {\r\n        id: \"bf8e0573-1e02-4798-a48e-3d760b89f47c\",\r\n        category: \"Развлечения\",\r\n        amount: 258,\r\n        date: \"2020-06-10T11:00:00+01:00\",\r\n        comment: \"За такси утром\",\r\n        type: \"Expense\",\r\n        billId: \"00924f0b-c772-491f-831a-80329a07d0fa\"\r\n    }\r\n]\r\n\r\nexport function getTransaction(transactionId: string) {\r\n    return transactions.find((transaction) => transaction.id === transactionId);\r\n}\r\n\r\n// get transactions by bill_id\r\nexport function getTxByBillId(billId: string) {\r\n    return transactions.filter((transaction) => transaction.billId === billId);\r\n}\r\n\r\nexport function createTransaction(transaction: ITransaction) {\r\n    const newTransaction = {\r\n        id: generateUUID(),\r\n        category: transaction.category,\r\n        amount: transaction.amount,\r\n        date: transaction.date.toString(),\r\n        comment: transaction.comment,\r\n        type: transaction.type,\r\n        billId: transaction.billId,\r\n    }\r\n    transactions.push(newTransaction);\r\n}\r\n\r\nexport function updateTransaction(transactionId: string, transaction: ITransaction) {\r\n    const indexOldTran = transactions.findIndex((transaction) => transaction.id === transactionId);\r\n    const newTransaction = {\r\n        id: transactionId,\r\n        category: transaction.category,\r\n        amount: transaction.amount,\r\n        date: transaction.date.toString(),\r\n        comment: transaction.comment,\r\n        type: transaction.type,\r\n        billId: transaction.billId,\r\n    }\r\n\r\n    transactions[indexOldTran] = newTransaction;\r\n}\r\n\r\nexport function deleteTransaction(transactionId: string) {\r\n    transactions = transactions.filter((transaction) => transaction.id !== transactionId);;\r\n}","import { DefaultBodyType, http, HttpResponse, StrictRequest } from \"msw\";\r\nimport { OUR_API_ADDRESS, OUR_API_ENDPOINTS } from \"../../API/Manager\";\r\nimport {\r\n    createTransaction,\r\n    updateTransaction,\r\n    deleteTransaction,\r\n    getTransaction,\r\n} from \"../Models/Transaction\";\r\nimport { ITransaction } from \"../../type\";\r\n\r\ninterface ITransactionHandler {\r\n    params: {\r\n        transactionId: string;\r\n    };\r\n    request?: StrictRequest<DefaultBodyType> | undefined;\r\n};\r\n\r\nconst transactionUrl = OUR_API_ADDRESS + \"/\" + OUR_API_ENDPOINTS.TRANSACTION;\r\nconst transactionIdUrl =\r\n    transactionUrl + \"/:\" + OUR_API_ENDPOINTS.TRANSACTIONID;\r\n\r\nexport const transactionHandlers = [\r\n\r\n    http.get(transactionIdUrl, async ({ params }: ITransactionHandler) => {\r\n        const { transactionId } = params;\r\n        const transaction = getTransaction(transactionId);\r\n        return HttpResponse.json(transaction);\r\n    }),\r\n\r\n    http.post(transactionUrl, async ({ request }) => {\r\n        const data = (await request.json()) as ITransaction;\r\n        createTransaction(data);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n\r\n    http.put(\r\n        transactionIdUrl,\r\n        async ({ params, request }: ITransactionHandler) => {\r\n            if (request) {\r\n                const { transactionId } = params;\r\n                const transaction = (await request.json()) as ITransaction;\r\n                updateTransaction(transactionId, transaction);\r\n                return HttpResponse.json({ success: true }, { status: 200 });\r\n            }\r\n            return HttpResponse.error();\r\n        }\r\n    ),\r\n\r\n    http.delete(transactionIdUrl, async ({ params }: ITransactionHandler) => {\r\n        const { transactionId } = params;\r\n        deleteTransaction(transactionId);\r\n        return HttpResponse.json({ success: true }, { status: 200 });\r\n    }),\r\n];\r\n","import { http, HttpResponse } from \"msw\";\r\nimport { OUR_API_ADDRESS, OUR_API_ENDPOINTS } from \"../../API/Manager\";\r\nimport { getTxByBillId, transactions } from \"../Models/Transaction\";\r\n\r\ninterface ITransactionsHandler {\r\n    params: {\r\n        billId: string;\r\n    };\r\n};\r\n\r\nconst transactionUrl = OUR_API_ADDRESS + \"/\" + OUR_API_ENDPOINTS.TRANSACTIONS;\r\nconst transactionIdUrl =\r\n    transactionUrl + \"/:\" + OUR_API_ENDPOINTS.BILLID;\r\n\r\nexport const transactionsHandlers = [\r\n    http.get(transactionUrl, () => {\r\n        return HttpResponse.json(transactions);\r\n    }),\r\n\r\n    http.get(transactionIdUrl, async ({ params }: ITransactionsHandler) => {\r\n        const { billId } = params;\r\n        const transactions = getTxByBillId(billId);\r\n        return HttpResponse.json(transactions);\r\n    }),\r\n];\r\n","import { setupWorker, SetupWorker } from \"msw/browser\";\r\nimport { groupBillHandlers } from \"./Handlers/GroupBill\";\r\nimport { billHandlers } from \"./Handlers/Bill\";\r\nimport { transactionHandlers } from \"./Handlers/Transaction\";\r\nimport { transactionsHandlers } from \"./Handlers/Transactions\";\r\n\r\nconst worker: SetupWorker = setupWorker(\r\n    ...groupBillHandlers,\r\n    ...billHandlers,\r\n    ...transactionHandlers,\r\n    ...transactionsHandlers,\r\n);\r\n\r\nexport function startWorker(): Promise<void> {\r\n    return worker.start({\r\n        serviceWorker: {\r\n            url: \"/cost-control-pages/mockServiceWorker.js\",\r\n        },\r\n        onUnhandledRequest(req, print) {\r\n            return; // Пропустим все запросы, не подходящие под наши хэндлеры\r\n        },\r\n    }) as Promise<void>; // либа не экспортирует нужный интерфейс\r\n}\r\n"],"names":["generateUUID","replace","c","r","Math","random","toString","bills","id","groupBillId","name","balance","groupBills","userId","getGroupBill","find","groupBill","getGroupBills","forEach","filter","bill","groupBillUrl","OUR_API_ADDRESS","OUR_API_ENDPOINTS","GROUPBILLS","groupBillIdUrl","GROUPBILLID","groupBillHandlers","http","get","HttpResponse","json","async","params","_ref","post","request","_ref2","newGroupBill","push","createGroupBill","success","status","put","_ref3","indexOldGroup","findIndex","updateGroupBill","error","delete","_ref4","deleteGroupBill","billUrl","BILLS","billIdUrl","BILLID","billHandlers","billId","getBill","newBill","createBill","indexOldBill","updateBill","deleteBill","transactions","category","amount","date","comment","type","getTxByBillId","transaction","transactionUrl","TRANSACTION","transactionIdUrl","TRANSACTIONID","transactionHandlers","transactionId","getTransaction","newTransaction","createTransaction","indexOldTran","updateTransaction","deleteTransaction","TRANSACTIONS","transactionsHandlers","worker","setupWorker","startWorker","start","serviceWorker","url","onUnhandledRequest","req","print"],"sourceRoot":""}